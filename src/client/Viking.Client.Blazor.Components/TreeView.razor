@typeparam TNode

<div class="uic-tree @(Visible ? "" : "uic-tree--hidden")">
    @foreach (var node in Nodes)
    {
        var nodeExpanded = ExpandedNodes.Contains(node);
        var nodeSelected = node.Equals(SelectedNode);
        var hasChildren = HasChildNodes(node);

    <div>
        @if (hasChildren)
        {
            <span class="uic-tree__icon " @onclick="@(() => OnToggleNode(node, !nodeExpanded))">
                <span class="@(nodeExpanded ? "oi oi-chevron-bottom curosr-pointer" : "oi oi-chevron-right curosr-pointer")"></span>
            </span>
        }

        <div class="uic-tree__title">
            <span class="p-1 curosr-pointer @(nodeSelected ? "bg-primary text-white" : "")" @onclick="@(() => OnSelectNode(node))">
                @TitleTemplate(node)
            </span>
        </div>

        @if (hasChildren)
        {
            <TreeView Nodes="ChildSelector(node)"
                  TitleTemplate="TitleTemplate"
                  ChildSelector="ChildSelector"
                  ExpandedNodes="ExpandedNodes"
                  ExpandedNodesChanged="ExpandedNodesChanged"
                  SelectedNode="SelectedNode"
                  SelectedNodeChanged="SelectedNodeChanged"
                  Visible="nodeExpanded"
                  HasChildNodes="HasChildNodes" />
        }
    </div>
    }
</div>
